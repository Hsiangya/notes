{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 41,
      "versionNonce": 1957612168,
      "isDeleted": false,
      "id": "LIZSOhnk-sKvvxoY12kgT",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 415.5758361816406,
      "y": 217.04544067382812,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 768.75,
      "height": 460.79999999999995,
      "seed": 1945529297,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    def dispatch(self, request, *args, **kwargs):\n        self.args = args\n        self.kwargs = kwargs\n        request = self.initialize_request(request, *args, **kwargs)\n        self.request = request\n        self.headers = self.default_response_headers  # deprecate?\n\n        try:\n            self.initial(request, *args, **kwargs)\n\n            if request.method.lower() in self.http_method_names:\n                handler = getattr(\n                    self, request.method.lower(), self.http_method_not_allowed\n                )\n            else:\n                handler = self.http_method_not_allowed\n\n            response = handler(request, *args, **kwargs)\n\n        except Exception as exc:\n            response = self.handle_exception(exc)\n\n        self.response = self.finalize_response(request, response, *args, **kwargs)\n        return self.response",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def dispatch(self, request, *args, **kwargs):\n        self.args = args\n        self.kwargs = kwargs\n        request = self.initialize_request(request, *args, **kwargs)\n        self.request = request\n        self.headers = self.default_response_headers  # deprecate?\n\n        try:\n            self.initial(request, *args, **kwargs)\n\n            if request.method.lower() in self.http_method_names:\n                handler = getattr(\n                    self, request.method.lower(), self.http_method_not_allowed\n                )\n            else:\n                handler = self.http_method_not_allowed\n\n            response = handler(request, *args, **kwargs)\n\n        except Exception as exc:\n            response = self.handle_exception(exc)\n\n        self.response = self.finalize_response(request, response, *args, **kwargs)\n        return self.response",
      "lineHeight": 1.2,
      "baseline": 457
    },
    {
      "type": "text",
      "version": 48,
      "versionNonce": 173998584,
      "isDeleted": false,
      "id": "8B2BzeV4fQzfTSIy4MIoo",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 449.84844970703125,
      "y": 28.39398193359375,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 440.625,
      "height": 96,
      "seed": 2114488529,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "    def __getattr__(self, attr):\n        try:\n            return getattr(self._request, attr)\n        except AttributeError:\n            return self.__getattribute__(attr)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    def __getattr__(self, attr):\n        try:\n            return getattr(self._request, attr)\n        except AttributeError:\n            return self.__getattribute__(attr)",
      "lineHeight": 1.2,
      "baseline": 92
    },
    {
      "type": "rectangle",
      "version": 180,
      "versionNonce": 277100936,
      "isDeleted": false,
      "id": "caaWpG-Pu4Prydnq3AVKV",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 442.42425537109375,
      "y": 10.303054809570312,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 674.5455017089845,
      "height": 152.12123107910156,
      "seed": 1294646815,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 83,
      "versionNonce": 1411121912,
      "isDeleted": false,
      "id": "RmeCedN_PTUl08WnTfh1_",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 457.5152587890625,
      "y": 12.272811889648438,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 125.75,
      "height": 19.2,
      "seed": 1282117023,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "DRF中的Request",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "DRF中的Request",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "rectangle",
      "version": 61,
      "versionNonce": 231983240,
      "isDeleted": false,
      "id": "QwRytGGtT2oJGvd3vpIaY",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 426.06060791015625,
      "y": 186.0605926513672,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 766.6666564941406,
      "height": 519.9999847412109,
      "seed": 1573357791,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [
        {
          "id": "vN1dF3UKFxQWmo-nvM8jn",
          "type": "arrow"
        }
      ],
      "updated": 1682511109157,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 218,
      "versionNonce": 1083237368,
      "isDeleted": false,
      "id": "Y6OqihAfIFjgO_Knft-nL",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 573.3636779785156,
      "y": 46.39399719238281,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 427.5,
      "height": 19.2,
      "seed": 1216957663,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "Request中没有的属性或方法，在Django中的request中找",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Request中没有的属性或方法，在Django中的request中找",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 215,
      "versionNonce": 2019129224,
      "isDeleted": false,
      "id": "-p-WQs8Ydpispw4PanL0F",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 482.2121276855469,
      "y": 132.9394302368164,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 582.5,
      "height": 19.2,
      "seed": 636642431,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "后续可以直接使用request.methods，DRF中的request没有会自动去DRF中查找",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "后续可以直接使用request.methods，DRF中的request没有会自动去DRF中查找",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "arrow",
      "version": 64,
      "versionNonce": 1841407224,
      "isDeleted": false,
      "id": "vN1dF3UKFxQWmo-nvM8jn",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 795.1514587402344,
      "y": 275.7575378417969,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 108.48486328125,
      "height": 106.06059265136719,
      "seed": 1755669279,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": {
        "elementId": "QwRytGGtT2oJGvd3vpIaY",
        "focus": -0.0718367671805058,
        "gap": 16.3636474609375
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          92.727294921875,
          -36.3636474609375
        ],
        [
          108.48486328125,
          -106.06059265136719
        ]
      ]
    },
    {
      "type": "text",
      "version": 147,
      "versionNonce": 72435336,
      "isDeleted": false,
      "id": "uEybcuwIJXGthVfmXpk_z",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 566.3333435058594,
      "y": 390.87872314453125,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 404.875,
      "height": 19.2,
      "seed": 1925448671,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "根据反射获取请求方法的小写(get/put/post/delete)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "根据反射获取请求方法的小写(get/put/post/delete)",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 119,
      "versionNonce": 422725112,
      "isDeleted": false,
      "id": "ra9E4UrNt04YTGPRmcr5F",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 584.757568359375,
      "y": 478.2120666503906,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 375.625,
      "height": 19.2,
      "seed": 1827178865,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "如果没有，则执行http_method_not_allowed方法",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "如果没有，则执行http_method_not_allowed方法",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 111,
      "versionNonce": 2121741704,
      "isDeleted": false,
      "id": "xkFBnm736K0wSyaKyI2oI",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 670.2121276855469,
      "y": 238.15147399902344,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 128,
      "height": 19.2,
      "seed": 479887729,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "请求时传递的参数",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "请求时传递的参数",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 221,
      "versionNonce": 803653368,
      "isDeleted": false,
      "id": "dajLpV_GrlAvWWfCRGcQH",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 542.6364135742188,
      "y": 526.302978515625,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 506.375,
      "height": 19.2,
      "seed": 6633023,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "获取到的方法+()，执行方法(get()/poest()/put()),并的到返回值",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取到的方法+()，执行方法(get()/poest()/put()),并的到返回值",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 85,
      "versionNonce": 1007109256,
      "isDeleted": false,
      "id": "ybysKf-0f2DAfJRHiV_wX",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 576.4495604335544,
      "y": -53.94903605293186,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 272.1143493652344,
      "height": 48.829618326822875,
      "seed": 1583015779,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109157,
      "link": null,
      "locked": false,
      "fontSize": 40.69134860568573,
      "fontFamily": 3,
      "text": "dispatch源码",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "dispatch源码",
      "lineHeight": 1.2,
      "baseline": 39
    },
    {
      "type": "text",
      "version": 40,
      "versionNonce": 1583556600,
      "isDeleted": false,
      "id": "4CJrPGrOB2y5o_m3uRJoI",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2198.4022785325124,
      "y": -76.608982070727,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 759.375,
      "height": 480,
      "seed": 1243018029,
      "groupIds": [],
      "roundness": null,
      "boundElements": [
        {
          "id": "J8xlDwrZpHTHQOcKlPGnb",
          "type": "arrow"
        }
      ],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "def action(methods=None, detail=None, url_path=None, url_name=None, **kwargs):\n    methods = ['get'] if methods is None else methods\n    methods = [method.lower() for method in methods]\n\n    assert detail is not None, (\n        \"@action() missing required argument: 'detail'\"\n    )\n\n    if 'name' in kwargs and 'suffix' in kwargs:\n        raise TypeError(\"`name` and `suffix` are mutually exclusive arguments.\")\n\n    def decorator(func):\n        func.mapping = MethodMapper(func, methods)\n\n        func.detail = detail\n        func.url_path = url_path if url_path else func.__name__\n        func.url_name = url_name if url_name else func.__name__.replace('_', '-')\n        func.kwargs = kwargs\n\n        if 'name' not in kwargs and 'suffix' not in kwargs:\n            func.kwargs['name'] = pretty_name(func.__name__)\n        func.kwargs['description'] = func.__doc__ or None\n\n        return func\n    return decorator",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "def action(methods=None, detail=None, url_path=None, url_name=None, **kwargs):\n    methods = ['get'] if methods is None else methods\n    methods = [method.lower() for method in methods]\n\n    assert detail is not None, (\n        \"@action() missing required argument: 'detail'\"\n    )\n\n    if 'name' in kwargs and 'suffix' in kwargs:\n        raise TypeError(\"`name` and `suffix` are mutually exclusive arguments.\")\n\n    def decorator(func):\n        func.mapping = MethodMapper(func, methods)\n\n        func.detail = detail\n        func.url_path = url_path if url_path else func.__name__\n        func.url_name = url_name if url_name else func.__name__.replace('_', '-')\n        func.kwargs = kwargs\n\n        if 'name' not in kwargs and 'suffix' not in kwargs:\n            func.kwargs['name'] = pretty_name(func.__name__)\n        func.kwargs['description'] = func.__doc__ or None\n\n        return func\n    return decorator",
      "lineHeight": 1.2,
      "baseline": 476
    },
    {
      "type": "text",
      "version": 56,
      "versionNonce": 180188040,
      "isDeleted": false,
      "id": "LjFIwek420XG-S2EpWzJt",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2169.8501002556036,
      "y": -785.7672903118298,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 862.5,
      "height": 652.8,
      "seed": 799602285,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "class AuthView(RetrieveModelMixin, CreateUpdateModelMixin, GenericViewSet):\n    authentication_classes = [JwtAuthentication, JwtParamAuthentication, DenyAuthentication]\n    queryset = models.CompanyAuth.objects.all()\n    serializer_class = AuthModelSerializers\n\n    @action(detail=False, methods=['post'], url_path=\"upload\")\n    def upload(self, request):\n        upload_object = request.FILES.get(\"file\")\n        # print(upload_object.name, upload_object.size)\n        if upload_object.size > 10 * 1024 * 1024:\n            return Response({\n                \"code\": return_code.ERROR,\n                \"msg\": \"文件太大\"\n            })\n\n        upload_url = get_upload_filename(upload_object.name)\n        save_path = default_storage.save(upload_url, upload_object)\n        local_url = default_storage.url(save_path)\n        abs_url = request.build_absolute_uri(local_url)\n\n        img_type = request.data.get(\"type\")\n        if img_type == \"front\":\n            upload_object.seek(0)\n            baidu_ai(upload_object.read())\n\n        context = {\n            \"code\": return_code.SUCCESS,\n            'data': {\n                'url': local_url,\n                'abs_url': abs_url\n            }\n        }\n        # 2.路径返回（第三方组件） {status:1}  {status:0 }\n        return Response(context)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class AuthView(RetrieveModelMixin, CreateUpdateModelMixin, GenericViewSet):\n    authentication_classes = [JwtAuthentication, JwtParamAuthentication, DenyAuthentication]\n    queryset = models.CompanyAuth.objects.all()\n    serializer_class = AuthModelSerializers\n\n    @action(detail=False, methods=['post'], url_path=\"upload\")\n    def upload(self, request):\n        upload_object = request.FILES.get(\"file\")\n        # print(upload_object.name, upload_object.size)\n        if upload_object.size > 10 * 1024 * 1024:\n            return Response({\n                \"code\": return_code.ERROR,\n                \"msg\": \"文件太大\"\n            })\n\n        upload_url = get_upload_filename(upload_object.name)\n        save_path = default_storage.save(upload_url, upload_object)\n        local_url = default_storage.url(save_path)\n        abs_url = request.build_absolute_uri(local_url)\n\n        img_type = request.data.get(\"type\")\n        if img_type == \"front\":\n            upload_object.seek(0)\n            baidu_ai(upload_object.read())\n\n        context = {\n            \"code\": return_code.SUCCESS,\n            'data': {\n                'url': local_url,\n                'abs_url': abs_url\n            }\n        }\n        # 2.路径返回（第三方组件） {status:1}  {status:0 }\n        return Response(context)",
      "lineHeight": 1.2,
      "baseline": 649
    },
    {
      "type": "rectangle",
      "version": 113,
      "versionNonce": 548104440,
      "isDeleted": false,
      "id": "03LkJsGe_Qc-G65r3wZvs",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2163.991505149266,
      "y": -808.5618951431013,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 869.3602498372397,
      "height": 680.8080122205946,
      "seed": 1145686445,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 58,
      "versionNonce": 550879880,
      "isDeleted": false,
      "id": "U7khDVZ5vNBIVqBwYcdcy",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2175.439292963936,
      "y": -95.43064751669041,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 857.2389729817705,
      "height": 507.7440728081597,
      "seed": 1462316707,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false
    },
    {
      "type": "arrow",
      "version": 109,
      "versionNonce": 1380157944,
      "isDeleted": false,
      "id": "J8xlDwrZpHTHQOcKlPGnb",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2201.7019408046476,
      "y": -681.9626468927758,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 62.626274956597626,
      "height": 604.0403747558594,
      "seed": 340529091,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": {
        "elementId": "4CJrPGrOB2y5o_m3uRJoI",
        "focus": -0.7537341313692371,
        "gap": 1.3132900661893814
      },
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [
        [
          0,
          0
        ],
        [
          -24.91583930121533,
          100.33671061197913
        ],
        [
          37.7104356553823,
          604.0403747558594
        ]
      ]
    },
    {
      "type": "text",
      "version": 73,
      "versionNonce": 218902920,
      "isDeleted": false,
      "id": "cq1BQYzf2pukcV0qW5-be",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2701.735510140585,
      "y": -56.272457955058826,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 108.125,
      "height": 19.2,
      "seed": 86727267,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "默认是get方法",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "默认是get方法",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 73,
      "versionNonce": 1043303160,
      "isDeleted": false,
      "id": "Hwh0DMc2S6iMaeNsxXt1H",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2697.5605359109845,
      "y": -34.52169840644797,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 96,
      "height": 19.2,
      "seed": 724410253,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "取方法的小写",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "取方法的小写",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 81,
      "versionNonce": 647807112,
      "isDeleted": false,
      "id": "W4GxnkUBzG48AG-T5l3ZJ",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2743.5537474452726,
      "y": 17.060807561434103,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 120.25,
      "height": 19.2,
      "seed": 286202925,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "detail参数必填",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "detail参数必填",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 9,
      "versionNonce": 787704824,
      "isDeleted": false,
      "id": "wEagHPInFvb6o1XygE9QF",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2200.523521479561,
      "y": 447.76783202975,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 796.875,
      "height": 364.8,
      "seed": 1595949101,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "class MethodMapper(dict)\n    def __init__(self, action, methods):\n        self.action = action\n        for method in methods:\n            self[method] = self.action.__name__\n\n    def _map(self, method, func):\n        assert method not in self, (\n            \"Method '%s' has already been mapped to '.%s'.\" % (method, self[method]))\n        assert func.__name__ != self.action.__name__, (\n            \"Method mapping does not behave like the property decorator. You \"\n            \"cannot use the same method name for each mapping declaration.\")\n\n        self[method] = func.__name__\n\n        return func\n\n    def get(self, func):\n        return self._map('get', func)",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class MethodMapper(dict)\n    def __init__(self, action, methods):\n        self.action = action\n        for method in methods:\n            self[method] = self.action.__name__\n\n    def _map(self, method, func):\n        assert method not in self, (\n            \"Method '%s' has already been mapped to '.%s'.\" % (method, self[method]))\n        assert func.__name__ != self.action.__name__, (\n            \"Method mapping does not behave like the property decorator. You \"\n            \"cannot use the same method name for each mapping declaration.\")\n\n        self[method] = func.__name__\n\n        return func\n\n    def get(self, func):\n        return self._map('get', func)",
      "lineHeight": 1.2,
      "baseline": 361
    },
    {
      "type": "rectangle",
      "version": 72,
      "versionNonce": 2101571464,
      "isDeleted": false,
      "id": "3Wfya5IbI1xnNPapsnpQK",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2184.1935315164533,
      "y": 431.16843966863894,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 851.8518405490454,
      "height": 397.97977023654516,
      "seed": 1156285229,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 150,
      "versionNonce": 2123574520,
      "isDeleted": false,
      "id": "8TyPudcQczAcM6n-H0iD-",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2557.9646564622,
      "y": 701.606231281052,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 316.125,
      "height": 19.2,
      "seed": 1155166989,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "{请求方法:函数名称，请求方法，函数名称}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "{请求方法:函数名称，请求方法，函数名称}",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "type": "text",
      "version": 223,
      "versionNonce": 1228684936,
      "isDeleted": false,
      "id": "t51PVAJ4HnOXoWFkViQpv",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 2683.908877111072,
      "y": 157.05665310179862,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 316.125,
      "height": 19.2,
      "seed": 1155166989,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1682511109158,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "{请求方法:函数名称，请求方法，函数名称}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "{请求方法:函数名称，请求方法，函数名称}",
      "lineHeight": 1.2,
      "baseline": 15
    },
    {
      "id": "IcNPsOXGNNz3ztOt8xbL3",
      "type": "text",
      "x": -1520.9603330791283,
      "y": 353.00977869155713,
      "width": 768.75,
      "height": 1612.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 595274632,
      "version": 63,
      "versionNonce": 1412406008,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682511357726,
      "link": null,
      "locked": false,
      "text": "class GenericAPIView(views.APIView):\n    queryset = None\n    serializer_class = None\n\n    lookup_field = 'pk'\n    lookup_url_kwarg = None\n\n    filter_backends = api_settings.DEFAULT_FILTER_BACKENDS\n    pagination_class = api_settings.DEFAULT_PAGINATION_CLASS\n\n    def get_queryset(self):\n        assert self.queryset is not None, (\n            \"'%s' should either include a `queryset` attribute, \"\n            \"or override the `get_queryset()` method.\"\n            % self.__class__.__name__\n        )\n\n        queryset = self.queryset\n        if isinstance(queryset, QuerySet):\n            queryset = queryset.all()\n        return queryset\n\n    def get_object(self):\n        queryset = self.filter_queryset(self.get_queryset())\n\n        lookup_url_kwarg = self.lookup_url_kwarg or self.lookup_field\n\n        assert lookup_url_kwarg in self.kwargs, (\n            'Expected view %s to be called with a URL keyword argument '\n            'named \"%s\". Fix your URL conf, or set the `.lookup_field` '\n            'attribute on the view correctly.' %\n            (self.__class__.__name__, lookup_url_kwarg)\n        )\n\n        filter_kwargs = {self.lookup_field: self.kwargs[lookup_url_kwarg]}\n        obj = get_object_or_404(queryset, **filter_kwargs)\n\n        self.check_object_permissions(self.request, obj)\n\n        return obj\n\n    def get_serializer(self, *args, **kwargs):\n        serializer_class = self.get_serializer_class()\n        kwargs.setdefault('context', self.get_serializer_context())\n        return serializer_class(*args, **kwargs)\n\n    def get_serializer_class(self):\n        assert self.serializer_class is not None, (\n            \"'%s' should either include a `serializer_class` attribute, \"\n            \"or override the `get_serializer_class()` method.\"\n            % self.__class__.__name__\n        )\n\n        return self.serializer_class\n\n    def get_serializer_context(self):\n        return {\n            'request': self.request,\n            'format': self.format_kwarg,\n            'view': self\n        }\n\n    def filter_queryset(self, queryset):\n        for backend in list(self.filter_backends):\n            queryset = backend().filter_queryset(self.request, queryset, self)\n        return queryset\n\n    @property\n    def paginator(self):\n        if not hasattr(self, '_paginator'):\n            if self.pagination_class is None:\n                self._paginator = None\n            else:\n                self._paginator = self.pagination_class()\n        return self._paginator\n\n    def paginate_queryset(self, queryset):\n        if self.paginator is None:\n            return None\n        return self.paginator.paginate_queryset(queryset, self.request, view=self)\n\n    def get_paginated_response(self, data):\n        assert self.paginator is not None\n        return self.paginator.get_paginated_response(data)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 1609,
      "containerId": null,
      "originalText": "class GenericAPIView(views.APIView):\n    queryset = None\n    serializer_class = None\n\n    lookup_field = 'pk'\n    lookup_url_kwarg = None\n\n    filter_backends = api_settings.DEFAULT_FILTER_BACKENDS\n    pagination_class = api_settings.DEFAULT_PAGINATION_CLASS\n\n    def get_queryset(self):\n        assert self.queryset is not None, (\n            \"'%s' should either include a `queryset` attribute, \"\n            \"or override the `get_queryset()` method.\"\n            % self.__class__.__name__\n        )\n\n        queryset = self.queryset\n        if isinstance(queryset, QuerySet):\n            queryset = queryset.all()\n        return queryset\n\n    def get_object(self):\n        queryset = self.filter_queryset(self.get_queryset())\n\n        lookup_url_kwarg = self.lookup_url_kwarg or self.lookup_field\n\n        assert lookup_url_kwarg in self.kwargs, (\n            'Expected view %s to be called with a URL keyword argument '\n            'named \"%s\". Fix your URL conf, or set the `.lookup_field` '\n            'attribute on the view correctly.' %\n            (self.__class__.__name__, lookup_url_kwarg)\n        )\n\n        filter_kwargs = {self.lookup_field: self.kwargs[lookup_url_kwarg]}\n        obj = get_object_or_404(queryset, **filter_kwargs)\n\n        self.check_object_permissions(self.request, obj)\n\n        return obj\n\n    def get_serializer(self, *args, **kwargs):\n        serializer_class = self.get_serializer_class()\n        kwargs.setdefault('context', self.get_serializer_context())\n        return serializer_class(*args, **kwargs)\n\n    def get_serializer_class(self):\n        assert self.serializer_class is not None, (\n            \"'%s' should either include a `serializer_class` attribute, \"\n            \"or override the `get_serializer_class()` method.\"\n            % self.__class__.__name__\n        )\n\n        return self.serializer_class\n\n    def get_serializer_context(self):\n        return {\n            'request': self.request,\n            'format': self.format_kwarg,\n            'view': self\n        }\n\n    def filter_queryset(self, queryset):\n        for backend in list(self.filter_backends):\n            queryset = backend().filter_queryset(self.request, queryset, self)\n        return queryset\n\n    @property\n    def paginator(self):\n        if not hasattr(self, '_paginator'):\n            if self.pagination_class is None:\n                self._paginator = None\n            else:\n                self._paginator = self.pagination_class()\n        return self._paginator\n\n    def paginate_queryset(self, queryset):\n        if self.paginator is None:\n            return None\n        return self.paginator.paginate_queryset(queryset, self.request, view=self)\n\n    def get_paginated_response(self, data):\n        assert self.paginator is not None\n        return self.paginator.get_paginated_response(data)",
      "lineHeight": 1.2
    },
    {
      "id": "mwhUfSwuVZoJpU7ySUxKT",
      "type": "rectangle",
      "x": -1528.945938470374,
      "y": 346.3221263458695,
      "width": 761.6161092122397,
      "height": 1650.504913330078,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2107179912,
      "version": 142,
      "versionNonce": 357614328,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682511296720,
      "link": null,
      "locked": false
    },
    {
      "id": "vOksmMXsQNNsHU5tUIela",
      "type": "text",
      "x": -966.6901808206339,
      "y": 488.27486139903795,
      "width": 80,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1608841352,
      "version": 107,
      "versionNonce": 1522822136,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682511335821,
      "link": null,
      "locked": false,
      "text": "过滤条件类",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "过滤条件类",
      "lineHeight": 1.2
    },
    {
      "id": "tOQNH28tLls8ZqnaicU9s",
      "type": "text",
      "x": -1178.0369215432888,
      "y": 678.9483334856263,
      "width": 284.625,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1025545720,
      "version": 117,
      "versionNonce": 1671729912,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512005102,
      "link": null,
      "locked": false,
      "text": "判断querset是否QuerySet的实例对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "判断querset是否QuerySet的实例对象",
      "lineHeight": 1.2
    },
    {
      "id": "J_o93GgP7e7gu6q8-aNcC",
      "type": "text",
      "x": -1039.4847432663792,
      "y": 1557.5341489153138,
      "width": 128,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1207809672,
      "version": 87,
      "versionNonce": 1263864456,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512065486,
      "link": null,
      "locked": false,
      "text": "递归实现条件过滤",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "递归实现条件过滤",
      "lineHeight": 1.2
    },
    {
      "id": "DWWWBibHBLQ4pOVBSBwFL",
      "type": "text",
      "x": -937.1951450133412,
      "y": 796.1200152076319,
      "width": 139,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 838771704,
      "version": 77,
      "versionNonce": 630418168,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512105825,
      "link": null,
      "locked": false,
      "text": "过滤后的queryset",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "过滤后的queryset",
      "lineHeight": 1.2
    },
    {
      "id": "bBQvdT-TiHKB6V67yTIeI",
      "type": "text",
      "x": -970.5621833162928,
      "y": 1032.1806875437865,
      "width": 172.125,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 108989688,
      "version": 103,
      "versionNonce": 1516110072,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512143821,
      "link": null,
      "locked": false,
      "text": "得到对象或抛出404异常",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "得到对象或抛出404异常",
      "lineHeight": 1.2
    },
    {
      "id": "5tER4Lz3fsikCVrOGgqN2",
      "type": "text",
      "x": -974.8719435159455,
      "y": 1062.315337880158,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1926371720,
      "version": 65,
      "versionNonce": 1614383240,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512150532,
      "link": null,
      "locked": false,
      "text": "检查是否有权限",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "检查是否有权限",
      "lineHeight": 1.2
    },
    {
      "id": "8Z2JwGBJ8KjmuJLSmQQfJ",
      "type": "text",
      "x": -995.3433044642965,
      "y": 1157.4332035485606,
      "width": 176,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1212614280,
      "version": 88,
      "versionNonce": 1505645560,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512172400,
      "link": null,
      "locked": false,
      "text": "获取序列化类的实例对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "获取序列化类的实例对象",
      "lineHeight": 1.2
    },
    {
      "id": "ZktavZT4-ZFJ7VMIhAJ0S",
      "type": "text",
      "x": -2845.7584435566355,
      "y": 448.33970235159336,
      "width": 562.5,
      "height": 422.4,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 449686776,
      "version": 19,
      "versionNonce": 806951672,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512630145,
      "link": null,
      "locked": false,
      "text": "class ViewSet(ViewSetMixin, views.APIView):\n    pass\n\n\nclass GenericViewSet(ViewSetMixin, generics.GenericAPIView):\n\n    pass\n\n\nclass ReadOnlyModelViewSet(mixins.RetrieveModelMixin,\n                           mixins.ListModelMixin,\n                           GenericViewSet):\n    pass\n\n\nclass ModelViewSet(mixins.CreateModelMixin,\n                   mixins.RetrieveModelMixin,\n                   mixins.UpdateModelMixin,\n                   mixins.DestroyModelMixin,\n                   mixins.ListModelMixin,\n                   GenericViewSet):\n    pass",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 418,
      "containerId": null,
      "originalText": "class ViewSet(ViewSetMixin, views.APIView):\n    pass\n\n\nclass GenericViewSet(ViewSetMixin, generics.GenericAPIView):\n\n    pass\n\n\nclass ReadOnlyModelViewSet(mixins.RetrieveModelMixin,\n                           mixins.ListModelMixin,\n                           GenericViewSet):\n    pass\n\n\nclass ModelViewSet(mixins.CreateModelMixin,\n                   mixins.RetrieveModelMixin,\n                   mixins.UpdateModelMixin,\n                   mixins.DestroyModelMixin,\n                   mixins.ListModelMixin,\n                   GenericViewSet):\n    pass",
      "lineHeight": 1.2
    },
    {
      "id": "sdQp7uy3-qxj55cXLJN4a",
      "type": "rectangle",
      "x": -2853.2492116259477,
      "y": 425.71847635875486,
      "width": 588.8888041178384,
      "height": 465.65653483072913,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1294662648,
      "version": 68,
      "versionNonce": 982748808,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512634996,
      "link": null,
      "locked": false
    },
    {
      "id": "hxH-uXILvV9ZdAhXNm2F6",
      "type": "text",
      "x": -2666.9864451057656,
      "y": 481.0214904782209,
      "width": 234.90900421142496,
      "height": 31.32120056152334,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 685865352,
      "version": 91,
      "versionNonce": 1218826488,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682512657531,
      "link": null,
      "locked": false,
      "text": "对视图类的合并继承",
      "fontSize": 26.101000467936117,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 25,
      "containerId": null,
      "originalText": "对视图类的合并继承",
      "lineHeight": 1.2
    },
    {
      "id": "r3DSNbTcGNwzr-4VIfqJt",
      "type": "text",
      "x": -2849.224827112213,
      "y": 987.7927924743612,
      "width": 834.375,
      "height": 307.2,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1891031176,
      "version": 6,
      "versionNonce": 1840677768,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513055680,
      "link": null,
      "locked": false,
      "text": "class CreateModelMixin:\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        self.perform_create(serializer)\n        headers = self.get_success_headers(serializer.data)\n        return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)\n\n    def perform_create(self, serializer):\n        serializer.save()\n\n    def get_success_headers(self, data):\n        try:\n            return {'Location': str(data[api_settings.URL_FIELD_NAME])}\n        except (TypeError, KeyError):\n            return {}",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 303,
      "containerId": null,
      "originalText": "class CreateModelMixin:\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        self.perform_create(serializer)\n        headers = self.get_success_headers(serializer.data)\n        return Response(serializer.data, status=status.HTTP_201_CREATED, headers=headers)\n\n    def perform_create(self, serializer):\n        serializer.save()\n\n    def get_success_headers(self, data):\n        try:\n            return {'Location': str(data[api_settings.URL_FIELD_NAME])}\n        except (TypeError, KeyError):\n            return {}",
      "lineHeight": 1.2
    },
    {
      "id": "9WoSozer1Q-OeLIQcTtcx",
      "type": "rectangle",
      "x": -2863.6019972511012,
      "y": 959.0385284905287,
      "width": 853.8719346788196,
      "height": 344.7811126708985,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1647104648,
      "version": 83,
      "versionNonce": 1851655160,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513081083,
      "link": null,
      "locked": false
    },
    {
      "id": "BI2VpYp2kG646GtI0ecvw",
      "type": "text",
      "x": -2381.413513906917,
      "y": 969.4089016866008,
      "width": 186.90915256076275,
      "height": 37.381830512152554,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 130688648,
      "version": 149,
      "versionNonce": 574190072,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513097552,
      "link": null,
      "locked": false,
      "text": "增加单个对象",
      "fontSize": 31.15152542679379,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 30.000000000000007,
      "containerId": null,
      "originalText": "增加单个对象",
      "lineHeight": 1.2
    },
    {
      "id": "N1CCA0n6TtbA1HGE14G4E",
      "type": "text",
      "x": -2280.5718051938097,
      "y": 1040.2506443081281,
      "width": 208,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 723506824,
      "version": 101,
      "versionNonce": 922866568,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513111775,
      "link": null,
      "locked": false,
      "text": "获取序列化类并判断是否有效",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "获取序列化类并判断是否有效",
      "lineHeight": 1.2
    },
    {
      "id": "r47zUdByd5DkPrYPBulPZ",
      "type": "text",
      "x": -2601.7838955800944,
      "y": 1164.3920152933717,
      "width": 432,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2076256760,
      "version": 182,
      "versionNonce": 399328904,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513143189,
      "link": null,
      "locked": false,
      "text": "将对象保存到数据库，保存到数据库前的操作可以在此自定义",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "将对象保存到数据库，保存到数据库前的操作可以在此自定义",
      "lineHeight": 1.2
    },
    {
      "id": "_Cupe1AzF2SDA_vcsuGCv",
      "type": "text",
      "x": -2286.834351309261,
      "y": 1084.0890266052204,
      "width": 176,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 262612984,
      "version": 140,
      "versionNonce": 79621512,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513524521,
      "link": null,
      "locked": false,
      "text": "返回成功信息，含响应头",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "返回成功信息，含响应头",
      "lineHeight": 1.2
    },
    {
      "id": "vPJfLH7d-Io9iVreKSocK",
      "type": "text",
      "x": -2855.1845371274017,
      "y": 1374.4929945685449,
      "width": 590.625,
      "height": 211.2,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 580418184,
      "version": 5,
      "versionNonce": 1154717176,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513547206,
      "link": null,
      "locked": false,
      "text": "class ListModelMixin:\n    def list(self, request, *args, **kwargs):\n        queryset = self.filter_queryset(self.get_queryset())\n\n        page = self.paginate_queryset(queryset)\n        if page is not None:\n            serializer = self.get_serializer(page, many=True)\n            return self.get_paginated_response(serializer.data)\n\n        serializer = self.get_serializer(queryset, many=True)\n        return Response(serializer.data)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 207,
      "containerId": null,
      "originalText": "class ListModelMixin:\n    def list(self, request, *args, **kwargs):\n        queryset = self.filter_queryset(self.get_queryset())\n\n        page = self.paginate_queryset(queryset)\n        if page is not None:\n            serializer = self.get_serializer(page, many=True)\n            return self.get_paginated_response(serializer.data)\n\n        serializer = self.get_serializer(queryset, many=True)\n        return Response(serializer.data)",
      "lineHeight": 1.2
    },
    {
      "id": "TXS0Ejrr9LJO-POx6VpEK",
      "type": "rectangle",
      "x": -2869.6626187246243,
      "y": 1355.6714054165266,
      "width": 865.9931776258682,
      "height": 273.40065002441406,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2061375224,
      "version": 95,
      "versionNonce": 364824056,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513553408,
      "link": null,
      "locked": false
    },
    {
      "id": "p9ru1blytZDDjDX7VuhcQ",
      "type": "text",
      "x": -2282.6592753543982,
      "y": 1409.880211772321,
      "width": 139,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 30386168,
      "version": 86,
      "versionNonce": 1311295368,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513585254,
      "link": null,
      "locked": false,
      "text": "过滤后的queryset",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "过滤后的queryset",
      "lineHeight": 1.2
    },
    {
      "id": "l6VlmINpzCgd0mfLc-DTe",
      "type": "text",
      "x": -2428.6862596751453,
      "y": 1358.2977058044387,
      "width": 228.7094737865311,
      "height": 54.89027370876744,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2119734408,
      "version": 83,
      "versionNonce": 909072776,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513634678,
      "link": null,
      "locked": false,
      "text": "查多个对象",
      "fontSize": 45.74189475730621,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 43.999999999999986,
      "containerId": null,
      "originalText": "查多个对象",
      "lineHeight": 1.2
    },
    {
      "id": "3PZ82d0SccuX8bIgoeWP9",
      "type": "text",
      "x": -2391.682848488079,
      "y": 1446.7825419589528,
      "width": 64,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1169987464,
      "version": 106,
      "versionNonce": 1397332472,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513722153,
      "link": null,
      "locked": false,
      "text": "分页对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "分页对象",
      "lineHeight": 1.2
    },
    {
      "id": "qSbaKtCNnhQSHbYTW8hAB",
      "type": "text",
      "x": -2835.6222609229753,
      "y": 1719.9474521694565,
      "width": 468.75,
      "height": 96,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 353772024,
      "version": 35,
      "versionNonce": 1616605688,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513806822,
      "link": null,
      "locked": false,
      "text": "class RetrieveModelMixin:\n    def retrieve(self, request, *args, **kwargs):\n        instance = self.get_object()\n        serializer = self.get_serializer(instance)\n        return Response(serializer.data)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 92,
      "containerId": null,
      "originalText": "class RetrieveModelMixin:\n    def retrieve(self, request, *args, **kwargs):\n        instance = self.get_object()\n        serializer = self.get_serializer(instance)\n        return Response(serializer.data)",
      "lineHeight": 1.2
    },
    {
      "id": "j7n3Epe_ltzoUWoi5qcy3",
      "type": "rectangle",
      "x": -2858.8882690881223,
      "y": 1664.7622782870776,
      "width": 854.5454745822483,
      "height": 167.67676459418408,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 845912712,
      "version": 139,
      "versionNonce": 1401074936,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513847955,
      "link": null,
      "locked": false
    },
    {
      "id": "_pcys6hbY6IpsPP7tu6Jh",
      "type": "text",
      "x": -2478.8209100115164,
      "y": 1756.6814440043088,
      "width": 96,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 826562696,
      "version": 83,
      "versionNonce": 1693757064,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513817396,
      "link": null,
      "locked": false,
      "text": "获取单个对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "获取单个对象",
      "lineHeight": 1.2
    },
    {
      "id": "4P3mTBnmJucHx2eDhbGSb",
      "type": "text",
      "x": -2343.837796404746,
      "y": 1780.4861721944126,
      "width": 96,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 149990536,
      "version": 68,
      "versionNonce": 1551942136,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513829852,
      "link": null,
      "locked": false,
      "text": "获取序列化类",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "获取序列化类",
      "lineHeight": 1.2
    },
    {
      "id": "9jUi4Es6vrE0upkGHz7We",
      "type": "text",
      "x": -2445.7232741065686,
      "y": 1799.3414239305241,
      "width": 64,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 40241288,
      "version": 55,
      "versionNonce": 1224240264,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513834016,
      "link": null,
      "locked": false,
      "text": "返回对象",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "返回对象",
      "lineHeight": 1.2
    },
    {
      "id": "FzsQ_9O8uYHjZHDjxwwpq",
      "type": "text",
      "x": -2595.487542769763,
      "y": 1672.001352994109,
      "width": 301.3870307074643,
      "height": 60.27740614149286,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1927471608,
      "version": 72,
      "versionNonce": 1388397704,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513844693,
      "link": null,
      "locked": false,
      "text": "获取单个对象",
      "fontSize": 50.23117178457739,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 47.99999999999999,
      "containerId": null,
      "originalText": "获取单个对象",
      "lineHeight": 1.2
    },
    {
      "id": "wye1ntDcerBSpK-0tsPzq",
      "type": "text",
      "x": -2845.5548848921585,
      "y": 1876.2773912699336,
      "width": 806.25,
      "height": 422.4,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 694367368,
      "version": 5,
      "versionNonce": 1663655816,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513865327,
      "link": null,
      "locked": false,
      "text": "class UpdateModelMixin:\n\n    def update(self, request, *args, **kwargs):\n        partial = kwargs.pop('partial', False)\n        instance = self.get_object()\n        serializer = self.get_serializer(instance, data=request.data, partial=partial)\n        serializer.is_valid(raise_exception=True)\n        self.perform_update(serializer)\n\n        if getattr(instance, '_prefetched_objects_cache', None):\n            # If 'prefetch_related' has been applied to a queryset, we need to\n            # forcibly invalidate the prefetch cache on the instance.\n            instance._prefetched_objects_cache = {}\n\n        return Response(serializer.data)\n\n    def perform_update(self, serializer):\n        serializer.save()\n\n    def partial_update(self, request, *args, **kwargs):\n        kwargs['partial'] = True\n        return self.update(request, *args, **kwargs)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 418,
      "containerId": null,
      "originalText": "class UpdateModelMixin:\n\n    def update(self, request, *args, **kwargs):\n        partial = kwargs.pop('partial', False)\n        instance = self.get_object()\n        serializer = self.get_serializer(instance, data=request.data, partial=partial)\n        serializer.is_valid(raise_exception=True)\n        self.perform_update(serializer)\n\n        if getattr(instance, '_prefetched_objects_cache', None):\n            # If 'prefetch_related' has been applied to a queryset, we need to\n            # forcibly invalidate the prefetch cache on the instance.\n            instance._prefetched_objects_cache = {}\n\n        return Response(serializer.data)\n\n    def perform_update(self, serializer):\n        serializer.save()\n\n    def partial_update(self, request, *args, **kwargs):\n        kwargs['partial'] = True\n        return self.update(request, *args, **kwargs)",
      "lineHeight": 1.2
    },
    {
      "id": "k0MDKQI2HSDYBUuB6dXNE",
      "type": "rectangle",
      "x": -2858.8882012712825,
      "y": 1864.7622528557622,
      "width": 849.1581726074219,
      "height": 455.2188279893662,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1558457992,
      "version": 91,
      "versionNonce": 22137592,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682513874315,
      "link": null,
      "locked": false
    },
    {
      "id": "QBt_v5Bhfx-2n0JVWDUXY",
      "type": "text",
      "x": -2827.5750807471936,
      "y": 2357.6915419318257,
      "width": 543.75,
      "height": 153.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 165481976,
      "version": 15,
      "versionNonce": 1093334152,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515396777,
      "link": null,
      "locked": false,
      "text": "class DestroyModelMixin:\n    def destroy(self, request, *args, **kwargs):\n        instance = self.get_object()\n        self.perform_destroy(instance)\n        return Response(status=status.HTTP_204_NO_CONTENT)\n\n    def perform_destroy(self, instance):\n        instance.delete()",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 150,
      "containerId": null,
      "originalText": "class DestroyModelMixin:\n    def destroy(self, request, *args, **kwargs):\n        instance = self.get_object()\n        self.perform_destroy(instance)\n        return Response(status=status.HTTP_204_NO_CONTENT)\n\n    def perform_destroy(self, instance):\n        instance.delete()",
      "lineHeight": 1.2
    },
    {
      "id": "Uos8WvyoQAEE218PyiQyG",
      "type": "rectangle",
      "x": -2860.2350267649886,
      "y": 2344.5602010572597,
      "width": 845.7911851671006,
      "height": 187.87875705295164,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 267068296,
      "version": 55,
      "versionNonce": 1340299400,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515401494,
      "link": null,
      "locked": false
    },
    {
      "id": "LLhHbwwoT3zIPjAxEXcFl",
      "type": "text",
      "x": -2358.888218225492,
      "y": 2355.4356486484053,
      "width": 147.05257161458348,
      "height": 44.11577148437504,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1345771768,
      "version": 88,
      "versionNonce": 1833997704,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515412451,
      "link": null,
      "locked": false,
      "text": "获取对象",
      "fontSize": 36.76314290364587,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 34.99999999999999,
      "containerId": null,
      "originalText": "获取对象",
      "lineHeight": 1.2
    },
    {
      "id": "-M_U-k5am4iktBLjxF45J",
      "type": "text",
      "x": -2460.470758101794,
      "y": 2413.5501370381626,
      "width": 64,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1169934328,
      "version": 73,
      "versionNonce": 1929243896,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515424508,
      "link": null,
      "locked": false,
      "text": "执行删除",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "执行删除",
      "lineHeight": 1.2
    },
    {
      "id": "puHQWCE26MMhec0BnZbHI",
      "type": "text",
      "x": -2581.682814579659,
      "y": 2497.826192268197,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 565996936,
      "version": 48,
      "versionNonce": 7317240,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515431502,
      "link": null,
      "locked": false,
      "text": "删除前的自定义",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "删除前的自定义",
      "lineHeight": 1.2
    },
    {
      "id": "kqXdK9ZU3AJNkir451Qr3",
      "type": "text",
      "x": -2263.703010434693,
      "y": 2435.6712782599507,
      "width": 32,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1880003464,
      "version": 47,
      "versionNonce": 1825602440,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515437297,
      "link": null,
      "locked": false,
      "text": "返回",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 15,
      "containerId": null,
      "originalText": "返回",
      "lineHeight": 1.2
    },
    {
      "id": "o7f8DpIVkk598rzE-OvdY",
      "type": "text",
      "x": -2180.171914718005,
      "y": 1882.8135740973528,
      "width": 102.45455932617195,
      "height": 61.472735595703156,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 977789944,
      "version": 125,
      "versionNonce": 1484530680,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1682515509655,
      "link": null,
      "locked": false,
      "text": "修改",
      "fontSize": 51.22727966308597,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 48.99999999999999,
      "containerId": null,
      "originalText": "修改",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}