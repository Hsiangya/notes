{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "SVW891buKykGYBu0eHwma",
      "type": "text",
      "x": 393.39398193359375,
      "y": 214.00607910156253,
      "width": 675,
      "height": 364.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 905928975,
      "version": 31,
      "versionNonce": 724441921,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "class BaseThrottle:\n    def allow_request(self, request, view):\n        raise NotImplementedError(\".allow_request() must be overridden\")\n\n    def get_ident(self, request):\n        xff = request.META.get(\"HTTP_X_FORWARDED_FOR\")\n        remote_addr = request.META.get(\"REMOTE_ADDR\")\n        num_proxies = api_settings.NUM_PROXIES\n\n        if num_proxies is not None:\n            if num_proxies == 0 or xff is None:\n                return remote_addr\n            addrs = xff.split(\",\")\n            client_addr = addrs[-min(num_proxies, len(addrs))]\n            return client_addr.strip()\n        return \"\".join(xff.split()) if xff else remote_addr\n\n    def wait(self):\n        return None",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class BaseThrottle:\n    def allow_request(self, request, view):\n        raise NotImplementedError(\".allow_request() must be overridden\")\n\n    def get_ident(self, request):\n        xff = request.META.get(\"HTTP_X_FORWARDED_FOR\")\n        remote_addr = request.META.get(\"REMOTE_ADDR\")\n        num_proxies = api_settings.NUM_PROXIES\n\n        if num_proxies is not None:\n            if num_proxies == 0 or xff is None:\n                return remote_addr\n            addrs = xff.split(\",\")\n            client_addr = addrs[-min(num_proxies, len(addrs))]\n            return client_addr.strip()\n        return \"\".join(xff.split()) if xff else remote_addr\n\n    def wait(self):\n        return None",
      "lineHeight": 1.2
    },
    {
      "id": "PUNC5YwnW-DK0eDCbEO0M",
      "type": "rectangle",
      "x": 353.9393615722656,
      "y": 173.33328247070312,
      "width": 724.848388671875,
      "height": 424.8484802246094,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 543123823,
      "version": 65,
      "versionNonce": 2059728207,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679708229832,
      "link": null,
      "locked": false
    },
    {
      "id": "vrCGpsWGVAMmeF-ny_ZML",
      "type": "text",
      "x": 383.0302429199219,
      "y": 1960.5453643798828,
      "width": 646.875,
      "height": 249.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1813224879,
      "version": 521,
      "versionNonce": 1626249903,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679708365720,
      "link": null,
      "locked": false,
      "text": "class MyThrottle(SimpleRateThrottle):\n    scope = \"xxx\"\n    THROTTLE_RATE={\"xxx\":\"5/m\"}\n    from django.core.cache import cache as default_cache\n    cache = default_cache\n    def get_cache_key(self, request, view):\n        if request.user:\n            ident = request.user.pk\n        else:\n            ident = self.get_ident(request)\n        return self.cache_format % {'scope':self.scope,'ident':ident}\n        \n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class MyThrottle(SimpleRateThrottle):\n    scope = \"xxx\"\n    THROTTLE_RATE={\"xxx\":\"5/m\"}\n    from django.core.cache import cache as default_cache\n    cache = default_cache\n    def get_cache_key(self, request, view):\n        if request.user:\n            ident = request.user.pk\n        else:\n            ident = self.get_ident(request)\n        return self.cache_format % {'scope':self.scope,'ident':ident}\n        \n",
      "lineHeight": 1.2
    },
    {
      "id": "z49WckK7_clV3VFIPpQlZ",
      "type": "text",
      "x": 590.5454406738281,
      "y": 186.27271270751953,
      "width": 144.5,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1731534945,
      "version": 144,
      "versionNonce": 1953068769,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "限流BaseThrottle",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "限流BaseThrottle",
      "lineHeight": 1.2
    },
    {
      "id": "Ia-XvFUTDQs07VdQu_Wi6",
      "type": "text",
      "x": 450.0909729003906,
      "y": 272.57576751708984,
      "width": 372.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 894452929,
      "version": 224,
      "versionNonce": 1689907905,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "返回True表示允许访问，返回False表示不允许访问",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "返回True表示允许访问，返回False表示不允许访问",
      "lineHeight": 1.2
    },
    {
      "id": "fJEmW2dKhaivg3g7SsGeE",
      "type": "text",
      "x": 708.1211853027344,
      "y": 289.7575454711914,
      "width": 82.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1891761697,
      "version": 57,
      "versionNonce": 1378112975,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "获取IP地址",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取IP地址",
      "lineHeight": 1.2
    },
    {
      "id": "gcaNkg0Lv4g0b6jaOUufL",
      "type": "text",
      "x": 373.0606689453125,
      "y": 627.5151138305664,
      "width": 731.25,
      "height": 1305.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 584800289,
      "version": 60,
      "versionNonce": 290452129,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "class SimpleRateThrottle(BaseThrottle):\n    cache = default_cache\n    timer = time.time\n    cache_format = \"throttle_%(scope)s_%(ident)s\"\n    scope = None\n    THROTTLE_RATES = api_settings.DEFAULT_THROTTLE_RATES\n\n    def __init__(self):\n        if not getattr(self, \"rate\", None):\n            self.rate = self.get_rate()\n        self.num_requests, self.duration = self.parse_rate(self.rate)\n\n    def get_cache_key(self, request, view):\n        raise NotImplementedError(\".get_cache_key() must be overridden\")\n\n    def get_rate(self):\n        if not getattr(self, \"scope\", None):\n            msg = (......)\n            raise ImproperlyConfigured(msg)\n        try:\n            return self.THROTTLE_RATES[self.scope]\n        except KeyError:\n            msg = \"No default throttle rate set for '%s' scope\" % self.scope\n            raise ImproperlyConfigured(msg)\n\n    def parse_rate(self, rate):\n        if rate is None:\n            return (None, None)\n        num, period = rate.split(\"/\")\n        num_requests = int(num)\n        duration = {\"s\": 1, \"m\": 60, \"h\": 3600, \"d\": 86400}[period[0]]\n        return (num_requests, duration)\n\n    def allow_request(self, request, view):\n        if self.rate is None:\n            return True\n\n        self.key = self.get_cache_key(request, view)\n        if self.key is None:\n            return True\n\n        self.history = self.cache.get(self.key, []) \n        self.now = self.timer()\n        while self.history and self.history[-1] <= self.now - self.duration:\n            self.history.pop()\n        if len(self.history) >= self.num_requests:\n            return self.throttle_failure()\n        return self.throttle_success()\n\n    def throttle_success(self):\n        self.history.insert(0, self.now)\n        self.cache.set(self.key, self.history, self.duration)\n        return True\n\n    def throttle_failure(self):\n        return False\n\n    def wait(self):\n        if self.history:\n            remaining_duration = self.duration - (self.now - self.history[-1])\n        else:\n            remaining_duration = self.duration\n\n        available_requests = self.num_requests - len(self.history) + 1\n        if available_requests <= 0:\n            return None\n\n        return remaining_duration / float(available_requests)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class SimpleRateThrottle(BaseThrottle):\n    cache = default_cache\n    timer = time.time\n    cache_format = \"throttle_%(scope)s_%(ident)s\"\n    scope = None\n    THROTTLE_RATES = api_settings.DEFAULT_THROTTLE_RATES\n\n    def __init__(self):\n        if not getattr(self, \"rate\", None):\n            self.rate = self.get_rate()\n        self.num_requests, self.duration = self.parse_rate(self.rate)\n\n    def get_cache_key(self, request, view):\n        raise NotImplementedError(\".get_cache_key() must be overridden\")\n\n    def get_rate(self):\n        if not getattr(self, \"scope\", None):\n            msg = (......)\n            raise ImproperlyConfigured(msg)\n        try:\n            return self.THROTTLE_RATES[self.scope]\n        except KeyError:\n            msg = \"No default throttle rate set for '%s' scope\" % self.scope\n            raise ImproperlyConfigured(msg)\n\n    def parse_rate(self, rate):\n        if rate is None:\n            return (None, None)\n        num, period = rate.split(\"/\")\n        num_requests = int(num)\n        duration = {\"s\": 1, \"m\": 60, \"h\": 3600, \"d\": 86400}[period[0]]\n        return (num_requests, duration)\n\n    def allow_request(self, request, view):\n        if self.rate is None:\n            return True\n\n        self.key = self.get_cache_key(request, view)\n        if self.key is None:\n            return True\n\n        self.history = self.cache.get(self.key, []) \n        self.now = self.timer()\n        while self.history and self.history[-1] <= self.now - self.duration:\n            self.history.pop()\n        if len(self.history) >= self.num_requests:\n            return self.throttle_failure()\n        return self.throttle_success()\n\n    def throttle_success(self):\n        self.history.insert(0, self.now)\n        self.cache.set(self.key, self.history, self.duration)\n        return True\n\n    def throttle_failure(self):\n        return False\n\n    def wait(self):\n        if self.history:\n            remaining_duration = self.duration - (self.now - self.history[-1])\n        else:\n            remaining_duration = self.duration\n\n        available_requests = self.num_requests - len(self.history) + 1\n        if available_requests <= 0:\n            return None\n\n        return remaining_duration / float(available_requests)",
      "lineHeight": 1.2
    },
    {
      "id": "N9HfVEV7iXZPlHJpcFNBi",
      "type": "rectangle",
      "x": 349.69732666015625,
      "y": 609.0908126831055,
      "width": 753.3333129882812,
      "height": 1335.1513671875002,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1395153999,
      "version": 201,
      "versionNonce": 1641464815,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679708229832,
      "link": null,
      "locked": false
    },
    {
      "id": "Z8Pdc99ksXcrI91O8gaVN",
      "type": "text",
      "x": 601.5763854980469,
      "y": 555.5757217407227,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 711236847,
      "version": 64,
      "versionNonce": 1230401039,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "需要等待的时间",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "需要等待的时间",
      "lineHeight": 1.2
    },
    {
      "id": "Mwl-gi7PWKJbO_jrDATzY",
      "type": "arrow",
      "x": 415.7579345703125,
      "y": 2069.696657180786,
      "width": 73.33334350585938,
      "height": 1759.9998397827148,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1098146767,
      "version": 672,
      "versionNonce": 328979503,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -62.424224853515625,
          -312.1211853027344
        ],
        [
          10.90911865234375,
          -1759.9998397827148
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "dmiReISc9cuds047CEOxj",
      "type": "text",
      "x": 509.00042724609375,
      "y": 2115.090715408325,
      "width": 322.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2135726305,
      "version": 222,
      "versionNonce": 1485796943,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "用户未登录则获取用户的IP地址作为唯一标识",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "用户未登录则获取用户的IP地址作为唯一标识",
      "lineHeight": 1.2
    },
    {
      "id": "jbhXSCaKp4TGvupUJN7j7",
      "type": "text",
      "x": 611.1519165039062,
      "y": 2076.636125564575,
      "width": 338.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 74480225,
      "version": 265,
      "versionNonce": 1392843297,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "用户已登录则获取用户的信息的pk作为唯一标识",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "用户已登录则获取用户的信息的pk作为唯一标识",
      "lineHeight": 1.2
    },
    {
      "id": "MrkAcbbQjhWDVDpUvHr_d",
      "type": "text",
      "x": 908.8488159179688,
      "y": 309.8784809112549,
      "width": 64,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2135179279,
      "version": 45,
      "versionNonce": 243215873,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "获取代理",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取代理",
      "lineHeight": 1.2
    },
    {
      "id": "nsASHLeog9h0RZoTIID-O",
      "type": "rectangle",
      "x": 363.6368103027344,
      "y": 1954.5451526641846,
      "width": 738.1816101074219,
      "height": 227.87881469726557,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 938581761,
      "version": 138,
      "versionNonce": 325019599,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679708247404,
      "link": null,
      "locked": false
    },
    {
      "id": "hhcoJ03meWFtjWgQZXn-S",
      "type": "text",
      "x": 783.2127075195312,
      "y": 858.999834060669,
      "width": 206.875,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1559897999,
      "version": 148,
      "versionNonce": 321552801,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "限流的键值放在缓存redis中",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "限流的键值放在缓存redis中",
      "lineHeight": 1.2
    },
    {
      "id": "vBJaA-tBMeKbQgN9i7cpg",
      "type": "rectangle",
      "x": 372.72796630859375,
      "y": 2245.454393386841,
      "width": 355.7574462890625,
      "height": 125.45458984375004,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1600186095,
      "version": 185,
      "versionNonce": 378108801,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "Kgl90Nszw2DxZFy1OpwPj",
          "type": "arrow"
        }
      ],
      "updated": 1679708241783,
      "link": null,
      "locked": false
    },
    {
      "id": "QVVhVs6bR_UjhUAhshPxS",
      "type": "text",
      "x": 394.45526123046875,
      "y": 2277.8484058380127,
      "width": 318.75,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 642331919,
      "version": 214,
      "versionNonce": 226408719,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708241783,
      "link": null,
      "locked": false,
      "text": "class login(APIView):\n    throttle_classes=[MyThrottle,]\n    def get(self,request):\n        pass",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class login(APIView):\n    throttle_classes=[MyThrottle,]\n    def get(self,request):\n        pass",
      "lineHeight": 1.2
    },
    {
      "id": "NvFQ5mKkMcpIN8NJKKG9z",
      "type": "text",
      "x": 429.6673889160156,
      "y": 2248.969621658325,
      "width": 88.84854125976561,
      "height": 26.65456237792969,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1827323233,
      "version": 167,
      "versionNonce": 430990177,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708241783,
      "link": null,
      "locked": false,
      "text": "局部应用",
      "fontSize": 22.212135314941403,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "局部应用",
      "lineHeight": 1.2
    },
    {
      "id": "MZ-1UVvCxLk7mYiQbAbPy",
      "type": "text",
      "x": 373.9703369140625,
      "y": 2196.212022781372,
      "width": 525,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 470402831,
      "version": 151,
      "versionNonce": 1253124719,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708275947,
      "link": null,
      "locked": false,
      "text": "throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "throttle_classes = api_settings.DEFAULT_THROTTLE_CLASSES",
      "lineHeight": 1.2
    },
    {
      "id": "14hdjExirlB1F3t44bNbr",
      "type": "arrow",
      "x": 543.0308380126953,
      "y": 1986.666612625122,
      "width": 206.6666259765625,
      "height": 3.517414076403611,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1669657313,
      "version": 56,
      "versionNonce": 2006984993,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          206.6666259765625,
          3.517414076403611
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "k6_xDXBikhxniE1kvOjMk",
        "focus": 0.2834913864296733,
        "gap": 15.697021484375
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "9l-x0FNXI37uDnbMzh5-X",
      "type": "arrow",
      "x": 592.7278594970703,
      "y": 2001.2120838165283,
      "width": 156.9696044921875,
      "height": 10.892724962806597,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1396346017,
      "version": 72,
      "versionNonce": 1890268527,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          156.9696044921875,
          -10.892724962806597
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "k6_xDXBikhxniE1kvOjMk",
        "focus": 0.8295917126761646,
        "gap": 15.697021484375
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "k6_xDXBikhxniE1kvOjMk",
      "type": "text",
      "x": 765.3944854736328,
      "y": 1986.1817798614502,
      "width": 238.875,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1614721345,
      "version": 120,
      "versionNonce": 719346945,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "14hdjExirlB1F3t44bNbr",
          "type": "arrow"
        },
        {
          "id": "9l-x0FNXI37uDnbMzh5-X",
          "type": "arrow"
        }
      ],
      "updated": 1679708229832,
      "link": null,
      "locked": false,
      "text": "scope名称与字典中的键名称相同",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "scope名称与字典中的键名称相同",
      "lineHeight": 1.2
    },
    {
      "id": "2EUe8iasG8Lepb33BYGji",
      "type": "text",
      "x": 915.9702301025391,
      "y": 2013.7879810333252,
      "width": 160.5,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1480072975,
      "version": 172,
      "versionNonce": 94097601,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708229833,
      "link": null,
      "locked": false,
      "text": "cache会读取setting\n中的cache配置",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "cache会读取setting\n中的cache配置",
      "lineHeight": 1.2
    },
    {
      "id": "f4qAM6FHqsmcxWg6rAN9V",
      "type": "text",
      "x": 920.4552459716797,
      "y": 2196.030282974243,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2117061537,
      "version": 50,
      "versionNonce": 1891043343,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679708374820,
      "link": null,
      "locked": false,
      "text": "全局应用时配置",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "全局应用时配置",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}