{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "UErnFnzF00Vf1jbIQwd2g",
      "type": "text",
      "x": 294.54547119140625,
      "y": 109.157568359375,
      "width": 562.5,
      "height": 499.2,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 181052212,
      "version": 43,
      "versionNonce": 1867302796,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925091702,
      "link": null,
      "locked": false,
      "text": "from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import serializers\nfrom api import models\n\n\nclass InfoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = models.Role\n        # fields = \"__all__\"\n        # fields = ['id', 'title', 'order']\n        exclude = [\"id\"]\n\n\nclass InfoView(APIView):\n    def get(self, request):\n        # 1.数据库获取多条数据\n        # queryset = models.Role.objects.all()\n        # ser = InfoSerializer(instance=queryset, many=True)\n\n        # 2.数据库获取单条数据\n        instance = models.Role.objects.all().first()\n        ser = InfoSerializer(instance=instance, many=False)\n\n        print(type(ser.data), ser.data)\n        return Response(ser.data)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import serializers\nfrom api import models\n\n\nclass InfoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = models.Role\n        # fields = \"__all__\"\n        # fields = ['id', 'title', 'order']\n        exclude = [\"id\"]\n\n\nclass InfoView(APIView):\n    def get(self, request):\n        # 1.数据库获取多条数据\n        # queryset = models.Role.objects.all()\n        # ser = InfoSerializer(instance=queryset, many=True)\n\n        # 2.数据库获取单条数据\n        instance = models.Role.objects.all().first()\n        ser = InfoSerializer(instance=instance, many=False)\n\n        print(type(ser.data), ser.data)\n        return Response(ser.data)",
      "lineHeight": 1.2
    },
    {
      "id": "CvrznMYE1QbSR10L9aGK3",
      "type": "text",
      "x": 529.727294921875,
      "y": 324.7575988769531,
      "width": 404.875,
      "height": 57.599999999999994,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 445731980,
      "version": 340,
      "versionNonce": 1952107660,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925169627,
      "link": null,
      "locked": false,
      "text": "在Meta中定义fields=\"__all__\",可以序列化所有字段\n也可以使用fields,指定需要序列化的字段\n定义exclude，可以指定不需要序列化的字段",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "在Meta中定义fields=\"__all__\",可以序列化所有字段\n也可以使用fields,指定需要序列化的字段\n定义exclude，可以指定不需要序列化的字段",
      "lineHeight": 1.2
    },
    {
      "id": "sJe-QG57d6jR-wCTbQK6R",
      "type": "text",
      "x": 561.9091796875,
      "y": 264.2121276855469,
      "width": 112,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1481577780,
      "version": 61,
      "versionNonce": 2058804148,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925178130,
      "link": null,
      "locked": false,
      "text": "需要指定数据库",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "需要指定数据库",
      "lineHeight": 1.2
    },
    {
      "id": "GWd51XVx0INzrmT-yhWfc",
      "type": "text",
      "x": 557.48486328125,
      "y": 413.9393310546875,
      "width": 228.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1654172300,
      "version": 81,
      "versionNonce": 1918205196,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925235234,
      "link": null,
      "locked": false,
      "text": "获取多条数据，指定many=True",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取多条数据，指定many=True",
      "lineHeight": 1.2
    },
    {
      "id": "0O8vzJxjY4r52tPjPX9An",
      "type": "text",
      "x": 560.6363525390625,
      "y": 491.272705078125,
      "width": 205.75,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1042174772,
      "version": 100,
      "versionNonce": 392716596,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925255284,
      "link": null,
      "locked": false,
      "text": "获取单条数据，many=False",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "获取单条数据，many=False",
      "lineHeight": 1.2
    },
    {
      "id": "I2NoaN69dRVjNVFvKG6Ng",
      "type": "text",
      "x": 323.51507568359375,
      "y": 636.4544982910156,
      "width": 565.375,
      "height": 134.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2088837300,
      "version": 734,
      "versionNonce": 1436560436,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "js0mlkRfpaLncvUuzyU-W",
          "type": "arrow"
        }
      ],
      "updated": 1679925631697,
      "link": null,
      "locked": false,
      "text": "model        指定序列化器所使用的数据库模型\nfield        指定需要序列化的字段，未指定则默认所有字段\nexclude      指定不需要的字段，同事指定fields,exclude会覆盖fields\nread_only_fields  指定只读字段，即只能在序列化输出时显示的字段\nwrite_only_fields 指定只写字段，只能在数据校验时使用的字段  \nextra_kwargs      指定额外的字段参数\ndepth             执行序列化器中嵌套序列化的最大深度",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "model        指定序列化器所使用的数据库模型\nfield        指定需要序列化的字段，未指定则默认所有字段\nexclude      指定不需要的字段，同事指定fields,exclude会覆盖fields\nread_only_fields  指定只读字段，即只能在序列化输出时显示的字段\nwrite_only_fields 指定只写字段，只能在数据校验时使用的字段  \nextra_kwargs      指定额外的字段参数\ndepth             执行序列化器中嵌套序列化的最大深度",
      "lineHeight": 1.2
    },
    {
      "id": "ERKB8jTzjje0BZ6BqepBZ",
      "type": "rectangle",
      "x": 283.3584730360243,
      "y": 95.61359151204428,
      "width": 655.3029632568359,
      "height": 524.9999618530273,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 916279092,
      "version": 69,
      "versionNonce": 2132296244,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925620941,
      "link": null,
      "locked": false
    },
    {
      "id": "js0mlkRfpaLncvUuzyU-W",
      "type": "arrow",
      "x": 370.47967359754773,
      "y": 332.7347730000814,
      "width": 75,
      "height": 282.575740814209,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1824119732,
      "version": 87,
      "versionNonce": 1276681652,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679925633987,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -75,
          51.51517868041992
        ],
        [
          -46.212120056152344,
          282.575740814209
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "I2NoaN69dRVjNVFvKG6Ng",
        "focus": -0.9308330394197575,
        "gap": 21.14398447672528
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}