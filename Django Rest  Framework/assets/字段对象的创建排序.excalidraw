{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "GstnCad2hcr2Ni766ELns",
      "type": "text",
      "x": 435,
      "y": 156,
      "width": 496.875,
      "height": 76.8,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1992141007,
      "version": 133,
      "versionNonce": 1737523937,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "db_instance = models.UserInfo.objects.all().first()\nser = UserSerializer(instance=db_instance,many=False)\n\n",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "db_instance = models.UserInfo.objects.all().first()\nser = UserSerializer(instance=db_instance,many=False)\n\n",
      "lineHeight": 1.2
    },
    {
      "id": "UlXcxCJlQvjNjuGLz3FYz",
      "type": "text",
      "x": 437.2121276855469,
      "y": 207.2121124267578,
      "width": 187,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1246354145,
      "version": 98,
      "versionNonce": 1998552769,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "使用ser.data触发序列化",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "使用ser.data触发序列化",
      "lineHeight": 1.2
    },
    {
      "id": "si7XB_mM3URuk33AlqZmq",
      "type": "text",
      "x": 443.69696044921875,
      "y": 134.60606384277344,
      "width": 400,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 480310401,
      "version": 129,
      "versionNonce": 732793295,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "序列化类中的字段与数据库模型中的字段不是同一个东西",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "序列化类中的字段与数据库模型中的字段不是同一个东西",
      "lineHeight": 1.2
    },
    {
      "id": "HBfocOe_wec0sky0BUfSJ",
      "type": "text",
      "x": 439.12115478515625,
      "y": 248.6363525390625,
      "width": 600,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1983897679,
      "version": 39,
      "versionNonce": 1461976737,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "Foo = type(\"Foo\",(object,),{ \"v1\":123, \"func\":lambda self:666 })",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Foo = type(\"Foo\",(object,),{ \"v1\":123, \"func\":lambda self:666 })",
      "lineHeight": 1.2
    },
    {
      "id": "vl-U-LAMbEryEEeaq00Bh",
      "type": "text",
      "x": 445.00006103515625,
      "y": 276.93939208984375,
      "width": 542.875,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1756074223,
      "version": 250,
      "versionNonce": 471431151,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "类中的成员，由传参的形式，先创建V1成员，后创建Foo类，成员以传参形式\n参与类的创建",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "类中的成员，由传参的形式，先创建V1成员，后创建Foo类，成员以传参形式\n参与类的创建",
      "lineHeight": 1.2
    },
    {
      "id": "a2gHKvoIprHkc-m-2G91K",
      "type": "text",
      "x": 444,
      "y": 360,
      "width": 421.875,
      "height": 192,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1697043151,
      "version": 5,
      "versionNonce": 1716355713,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585643,
      "link": null,
      "locked": false,
      "text": "from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import serializers\nfrom api import models\n\n\nclass InfoSerializer(serializers.Serializer):\n    id = serializers.IntegerField()\n    title = serializers.CharField()\n    order = serializers.IntegerField",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import serializers\nfrom api import models\n\n\nclass InfoSerializer(serializers.Serializer):\n    id = serializers.IntegerField()\n    title = serializers.CharField()\n    order = serializers.IntegerField",
      "lineHeight": 1.2
    },
    {
      "id": "3sgTSNKyfux1FzCmfpTjM",
      "type": "text",
      "x": 435.36358642578125,
      "y": 583.3030395507812,
      "width": 806.25,
      "height": 460.79999999999995,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 48060225,
      "version": 54,
      "versionNonce": 1348528385,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "class IntegerField(Field):\n    default_error_messages = {\n        \"invalid\": _(\"A valid integer is required.\"),\n        \"max_value\": _(\"Ensure this value is less than or equal to {max_value}.\"),\n        \"min_value\": _(\"Ensure this value is greater than or equal to {min_value}.\"),\n        \"max_string_length\": _(\"String value too large.\"),\n    }\n    MAX_STRING_LENGTH = 1000  # Guard against malicious string inputs.\n    re_decimal = re.compile(r\"\\.0*\\s*$\")  # allow e.g. '1.0' as an int, but not '1.2'\n\n    def __init__(self, **kwargs):\n        self.max_value = kwargs.pop(\"max_value\", None)\n        self.min_value = kwargs.pop(\"min_value\", None)\n        super().__init__(**kwargs)\n        if self.max_value is not None:\n            message = lazy_format(\n                self.error_messages[\"max_value\"], max_value=self.max_value\n            )\n            self.validators.append(MaxValueValidator(self.max_value, message=message))\n        if self.min_value is not None:\n            message = lazy_format(\n                self.error_messages[\"min_value\"], min_value=self.min_value\n            )\n            self.validators.append(MinValueValidator(self.min_value, message=message))",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class IntegerField(Field):\n    default_error_messages = {\n        \"invalid\": _(\"A valid integer is required.\"),\n        \"max_value\": _(\"Ensure this value is less than or equal to {max_value}.\"),\n        \"min_value\": _(\"Ensure this value is greater than or equal to {min_value}.\"),\n        \"max_string_length\": _(\"String value too large.\"),\n    }\n    MAX_STRING_LENGTH = 1000  # Guard against malicious string inputs.\n    re_decimal = re.compile(r\"\\.0*\\s*$\")  # allow e.g. '1.0' as an int, but not '1.2'\n\n    def __init__(self, **kwargs):\n        self.max_value = kwargs.pop(\"max_value\", None)\n        self.min_value = kwargs.pop(\"min_value\", None)\n        super().__init__(**kwargs)\n        if self.max_value is not None:\n            message = lazy_format(\n                self.error_messages[\"max_value\"], max_value=self.max_value\n            )\n            self.validators.append(MaxValueValidator(self.max_value, message=message))\n        if self.min_value is not None:\n            message = lazy_format(\n                self.error_messages[\"min_value\"], min_value=self.min_value\n            )\n            self.validators.append(MinValueValidator(self.min_value, message=message))",
      "lineHeight": 1.2
    },
    {
      "id": "Ff0qOF5ExjR6JKJzGhf2v",
      "type": "rectangle",
      "x": 429.6969299316406,
      "y": 334.54542541503906,
      "width": 775.1514587402344,
      "height": 234.5454559326172,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 483941281,
      "version": 91,
      "versionNonce": 289334159,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false
    },
    {
      "id": "9VUwAcYZf_ZAa4TCadHA2",
      "type": "rectangle",
      "x": 434.5453186035156,
      "y": 575.1514434814453,
      "width": 812.7273254394531,
      "height": 481.21214294433594,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 2074016399,
      "version": 80,
      "versionNonce": 1363026145,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false
    },
    {
      "id": "Dzd66UKNP3tKNxwceka6e",
      "type": "text",
      "x": 767.5453186035156,
      "y": 835.9090576171875,
      "width": 187,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1394884801,
      "version": 119,
      "versionNonce": 1432968385,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "调用父类的__init__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "调用父类的__init__方法",
      "lineHeight": 1.2
    },
    {
      "id": "qmZQAW17Pwd54DWaNmM6r",
      "type": "text",
      "x": 456.3029479980469,
      "y": 1091.1514587402344,
      "width": 721.875,
      "height": 1152,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1250034785,
      "version": 46,
      "versionNonce": 368610255,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "class Field:\n    _creation_counter = 0\n\n    default_error_messages = {\n        \"required\": _(\".......\"),\n        \"null\": _(\".......\"),}\n    default_validators = []\n    default_empty_html = empty\n    initial = None\n\n    def __init__(\n        self,\n        *,\n        read_only=False,\n        write_only=False,\n        required=None,\n        default=empty,\n        initial=empty,\n        source=None,\n        label=None,\n        help_text=None,\n        style=None,\n        error_messages=None,\n        validators=None,\n        allow_null=False\n    ):\n        self._creation_counter = Field._creation_counter\n        Field._creation_counter += 1\n\n        if required is None:\n            required = default is empty and not read_only\n        assert not (read_only and write_only), NOT_READ_ONLY_WRITE_ONLY\n        assert not (read_only and required), NOT_READ_ONLY_REQUIRED\n        assert not (required and default is not empty), NOT_REQUIRED_DEFAULT\n        assert not (read_only and self.__class__ == Field), USE_READONLYFIELD\n        self.read_only = read_only\n        self.write_only = write_only\n        self.required = required\n        self.default = default\n        self.source = source\n        self.initial = self.initial if (initial is empty) else initial\n        self.label = label\n        self.help_text = help_text\n        self.style = {} if style is None else style\n        self.allow_null = allow_null\n\n        if self.default_empty_html is not empty:\n            if default is not empty:\n                self.default_empty_html = default\n\n        if validators is not None:\n            self.validators = list(validators)\n        self.field_name = None\n        self.parent = None\n\n        messages = {}\n        for cls in reversed(self.__class__.__mro__):\n            messages.update(getattr(cls, \"default_error_messages\", {}))\n        messages.update(error_messages or {})\n        self.error_messages = messages",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class Field:\n    _creation_counter = 0\n\n    default_error_messages = {\n        \"required\": _(\".......\"),\n        \"null\": _(\".......\"),}\n    default_validators = []\n    default_empty_html = empty\n    initial = None\n\n    def __init__(\n        self,\n        *,\n        read_only=False,\n        write_only=False,\n        required=None,\n        default=empty,\n        initial=empty,\n        source=None,\n        label=None,\n        help_text=None,\n        style=None,\n        error_messages=None,\n        validators=None,\n        allow_null=False\n    ):\n        self._creation_counter = Field._creation_counter\n        Field._creation_counter += 1\n\n        if required is None:\n            required = default is empty and not read_only\n        assert not (read_only and write_only), NOT_READ_ONLY_WRITE_ONLY\n        assert not (read_only and required), NOT_READ_ONLY_REQUIRED\n        assert not (required and default is not empty), NOT_REQUIRED_DEFAULT\n        assert not (read_only and self.__class__ == Field), USE_READONLYFIELD\n        self.read_only = read_only\n        self.write_only = write_only\n        self.required = required\n        self.default = default\n        self.source = source\n        self.initial = self.initial if (initial is empty) else initial\n        self.label = label\n        self.help_text = help_text\n        self.style = {} if style is None else style\n        self.allow_null = allow_null\n\n        if self.default_empty_html is not empty:\n            if default is not empty:\n                self.default_empty_html = default\n\n        if validators is not None:\n            self.validators = list(validators)\n        self.field_name = None\n        self.parent = None\n\n        messages = {}\n        for cls in reversed(self.__class__.__mro__):\n            messages.update(getattr(cls, \"default_error_messages\", {}))\n        messages.update(error_messages or {})\n        self.error_messages = messages",
      "lineHeight": 1.2
    },
    {
      "id": "15hyxgUthnaG-_as_duMS",
      "type": "rectangle",
      "x": 437.09073638916016,
      "y": 1067.265022277832,
      "width": 808.3332443237305,
      "height": 1187.1211433410645,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 210473807,
      "version": 100,
      "versionNonce": 1283595425,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false
    },
    {
      "id": "GcDeqnmgDjXUG72-NkzVk",
      "type": "arrow",
      "x": 509.0603790283203,
      "y": 840.7497863769531,
      "width": 58.33332061767578,
      "height": 450.7575988769531,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 533467873,
      "version": 160,
      "versionNonce": 1236548079,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -58.33332061767578,
          284.09088134765625
        ],
        [
          -21.969680786132812,
          450.7575988769531
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "Rm7bJaC1eJssv_IV77cJl",
      "type": "rectangle",
      "x": 481.0300979614258,
      "y": 1110.4466705322266,
      "width": 222.72724151611328,
      "height": 25,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1351785487,
      "version": 41,
      "versionNonce": 472686689,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "VYjoPhyUtCnwm4XeBwy3X",
          "type": "arrow"
        }
      ],
      "updated": 1679971601463,
      "link": null,
      "locked": false
    },
    {
      "id": "BMLWZp6qRje1ICIkt09lJ",
      "type": "text",
      "x": 965.9543380737305,
      "y": 809.3104248046875,
      "width": 235,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1542550703,
      "version": 147,
      "versionNonce": 34939919,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "实例化的时候执行__init__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "实例化的时候执行__init__方法",
      "lineHeight": 1.2
    },
    {
      "id": "LT8Bby-VUQcewQrAhSxRB",
      "type": "rectangle",
      "x": 518.9088973999023,
      "y": 1587.3406677246094,
      "width": 471.9696807861328,
      "height": 48.48487854003906,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 578886785,
      "version": 111,
      "versionNonce": 810166369,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false
    },
    {
      "id": "_JofrDXltFem_jwXVz-Wd",
      "type": "text",
      "x": 804.4013748168945,
      "y": 1541.0907440185547,
      "width": 322.125,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 434169217,
      "version": 407,
      "versionNonce": 1863567919,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "GHOxs4rJ6SYSHSjZM7q0q",
          "type": "arrow"
        }
      ],
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "实例化的时候会执行_creation_counter+1\n并且使用Field._creation_counter",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "实例化的时候会执行_creation_counter+1\n并且使用Field._creation_counter",
      "lineHeight": 1.2
    },
    {
      "id": "kX_-IKn-6hNNIE_9hfUu1",
      "type": "arrow",
      "x": 483.30297088623047,
      "y": 499.8407440185547,
      "width": 46.212120056152344,
      "height": 284.09088134765625,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 1033515215,
      "version": 176,
      "versionNonce": 344486977,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -46.212120056152344,
          100.75756072998047
        ],
        [
          -12.878761291503906,
          284.09088134765625
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "wSMr6sp6rcVbntcWWtwfM",
      "type": "text",
      "x": 489.0605888366699,
      "y": 756.1665802001953,
      "width": 169.875,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2076782721,
      "version": 91,
      "versionNonce": 764980303,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "IntergerField实例化",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "IntergerField实例化",
      "lineHeight": 1.2
    },
    {
      "id": "3NOX07u9BYPbCapT3zDOT",
      "type": "text",
      "x": 437.62145614624023,
      "y": -412.8107376098633,
      "width": 825,
      "height": 537.6,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1086343809,
      "version": 73,
      "versionNonce": 382878753,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "class CharField(Field):\n    default_error_messages = {\n        \"invalid\": _(\"........\"),\n        \"blank\": _(\".........\"),\n        \"max_length\": _(\".........\"),\n        \"min_length\": _(\".........\"),\n    }\n    initial = \"\"\n\n    def __init__(self, **kwargs):\n        self.allow_blank = kwargs.pop(\"allow_blank\", False)\n        self.trim_whitespace = kwargs.pop(\"trim_whitespace\", True)\n        self.max_length = kwargs.pop(\"max_length\", None)\n        self.min_length = kwargs.pop(\"min_length\", None)\n        super().__init__(**kwargs)\n        if self.max_length is not None:\n            message = lazy_format(\n                self.error_messages[\"max_length\"], max_length=self.max_length\n            )\n            self.validators.append(MaxLengthValidator(self.max_length, message=message))\n        if self.min_length is not None:\n            message = lazy_format(\n                self.error_messages[\"min_length\"], min_length=self.min_length\n            )\n            self.validators.append(MinLengthValidator(self.min_length, message=message))\n\n        self.validators.append(ProhibitNullCharactersValidator())\n        self.validators.append(ProhibitSurrogateCharactersValidator())",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class CharField(Field):\n    default_error_messages = {\n        \"invalid\": _(\"........\"),\n        \"blank\": _(\".........\"),\n        \"max_length\": _(\".........\"),\n        \"min_length\": _(\".........\"),\n    }\n    initial = \"\"\n\n    def __init__(self, **kwargs):\n        self.allow_blank = kwargs.pop(\"allow_blank\", False)\n        self.trim_whitespace = kwargs.pop(\"trim_whitespace\", True)\n        self.max_length = kwargs.pop(\"max_length\", None)\n        self.min_length = kwargs.pop(\"min_length\", None)\n        super().__init__(**kwargs)\n        if self.max_length is not None:\n            message = lazy_format(\n                self.error_messages[\"max_length\"], max_length=self.max_length\n            )\n            self.validators.append(MaxLengthValidator(self.max_length, message=message))\n        if self.min_length is not None:\n            message = lazy_format(\n                self.error_messages[\"min_length\"], min_length=self.min_length\n            )\n            self.validators.append(MinLengthValidator(self.min_length, message=message))\n\n        self.validators.append(ProhibitNullCharactersValidator())\n        self.validators.append(ProhibitSurrogateCharactersValidator())",
      "lineHeight": 1.2
    },
    {
      "id": "FCHOzsPmnBAoEgiTw4u1i",
      "type": "rectangle",
      "x": 424.9699363708496,
      "y": -423.6440486907959,
      "width": 846.212158203125,
      "height": 559.0908527374268,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 147342543,
      "version": 73,
      "versionNonce": 696011375,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false
    },
    {
      "id": "fLmTw2QpZZGfSX94IcZoC",
      "type": "arrow",
      "x": 480.27297592163086,
      "y": 522.9468040466309,
      "width": 51.515159606933594,
      "height": 750.3787612915039,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 2079169729,
      "version": 209,
      "versionNonce": 1930893313,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -51.515159606933594,
          -170.83335876464844
        ],
        [
          -3.0303192138671875,
          -750.3787612915039
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "AdeGyOKPIxpbxXWffK78e",
      "type": "text",
      "x": 772.204891204834,
      "y": -143.00011825561523,
      "width": 415.375,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1272997615,
      "version": 182,
      "versionNonce": 1065821327,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "text": "CharField实例化的时候，也会调用父类的__init__方法",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CharField实例化的时候，也会调用父类的__init__方法",
      "lineHeight": 1.2
    },
    {
      "id": "GHOxs4rJ6SYSHSjZM7q0q",
      "type": "arrow",
      "x": 1183.3032188415527,
      "y": -128.94711685180664,
      "width": 109.84855651855469,
      "height": 1669.3181610107422,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 146874991,
      "version": 329,
      "versionNonce": 995520481,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971585644,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          60.60615539550781,
          1038.2575225830078
        ],
        [
          -49.242401123046875,
          1669.3181610107422
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "_JofrDXltFem_jwXVz-Wd",
        "focus": 1.0044091651963991,
        "gap": 7.534442901611328
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "IG14VDsfCFwFfqp0nKi8j",
      "type": "text",
      "x": 762.7352104187012,
      "y": 1490.1817207336426,
      "width": 370.625,
      "height": 38.4,
      "angle": 0,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 670994959,
      "version": 236,
      "versionNonce": 1127197121,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971588263,
      "link": null,
      "locked": false,
      "text": "CharField实例化时，Field_creation_counter\n已经不是默认的0，已经被IntegerField+1了",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CharField实例化时，Field_creation_counter\n已经不是默认的0，已经被IntegerField+1了",
      "lineHeight": 1.2
    },
    {
      "id": "VYjoPhyUtCnwm4XeBwy3X",
      "type": "arrow",
      "x": 715.1215324401855,
      "y": 1118.401439666748,
      "width": 163.53794538587647,
      "height": 258.3333206176758,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 2
      },
      "seed": 701509455,
      "version": 353,
      "versionNonce": 149082063,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679971817433,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          109.09088134765625,
          83.33333969116211
        ],
        [
          163.53794538587647,
          258.3333206176758
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "Rm7bJaC1eJssv_IV77cJl",
        "focus": -1.007443050991615,
        "gap": 11.364192962646484
      },
      "endBinding": {
        "elementId": "S2D810JLv_rE7DypKwazf",
        "focus": -0.19418222013365694,
        "gap": 14.393959045410043
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "S2D810JLv_rE7DypKwazf",
      "type": "text",
      "x": 727.1669731140137,
      "y": 1391.128719329834,
      "width": 431.375,
      "height": 96,
      "angle": 0,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1929638159,
      "version": 408,
      "versionNonce": 419748033,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "VYjoPhyUtCnwm4XeBwy3X",
          "type": "arrow"
        }
      ],
      "updated": 1679971817432,
      "link": null,
      "locked": false,
      "text": "基于_creation_counter维护了一个计数器，计数器决定谁\n先加载，谁后加载。\n\n意义：依据_creation_counter决定字段后续处理的顺序，\n字典时无序的。因此需要该字段进行排序",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "基于_creation_counter维护了一个计数器，计数器决定谁\n先加载，谁后加载。\n\n意义：依据_creation_counter决定字段后续处理的顺序，\n字典时无序的。因此需要该字段进行排序",
      "lineHeight": 1.2
    },
    {
      "id": "-wyORfZD5fzDV9sC-f4UT",
      "type": "text",
      "x": 1499.0608940124512,
      "y": -411.7122001647949,
      "width": 675,
      "height": 326.4,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 1036009505,
      "version": 61,
      "versionNonce": 876020399,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679972082139,
      "link": null,
      "locked": false,
      "text": "class IntegerField(Field):\n    default_error_messages = {......}\n    def __init__(self, **kwargs):\n        pass\n\n    def to_internal_value(self, data):\n        if isinstance(data, str) and len(data) > self.MAX_STRING_LENGTH:\n            self.fail(\"max_string_length\")\n\n        try:\n            data = int(self.re_decimal.sub(\"\", str(data)))\n        except (ValueError, TypeError):\n            self.fail(\"invalid\")\n        return data\n\n    def to_representation(self, value):\n        return int(value)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class IntegerField(Field):\n    default_error_messages = {......}\n    def __init__(self, **kwargs):\n        pass\n\n    def to_internal_value(self, data):\n        if isinstance(data, str) and len(data) > self.MAX_STRING_LENGTH:\n            self.fail(\"max_string_length\")\n\n        try:\n            data = int(self.re_decimal.sub(\"\", str(data)))\n        except (ValueError, TypeError):\n            self.fail(\"invalid\")\n        return data\n\n    def to_representation(self, value):\n        return int(value)",
      "lineHeight": 1.2
    },
    {
      "id": "C04yw4erL4GtwXlGaaQ6K",
      "type": "text",
      "x": 1497.2806510925293,
      "y": -54.174320220947266,
      "width": 731.25,
      "height": 422.4,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 2055456641,
      "version": 47,
      "versionNonce": 16507873,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679973248376,
      "link": null,
      "locked": false,
      "text": "class CharField(Field):\n    default_error_messages = {......}\n    initial = \"\"\n\n    def __init__(self, **kwargs):\n        pass\n\n    def run_validation(self, data=empty):\n        if data == \"\" or (self.trim_whitespace and str(data).strip() == \"\"):\n            if not self.allow_blank:\n                self.fail(\"blank\")\n            return \"\"\n        return super().run_validation(data)\n\n    def to_internal_value(self, data):\n        if isinstance(data, bool) or not isinstance(data, (str, int, float,)):\n            self.fail(\"invalid\")\n        value = str(data)\n        return value.strip() if self.trim_whitespace else value\n\n    def to_representation(self, value):\n        return str(value)",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "class CharField(Field):\n    default_error_messages = {......}\n    initial = \"\"\n\n    def __init__(self, **kwargs):\n        pass\n\n    def run_validation(self, data=empty):\n        if data == \"\" or (self.trim_whitespace and str(data).strip() == \"\"):\n            if not self.allow_blank:\n                self.fail(\"blank\")\n            return \"\"\n        return super().run_validation(data)\n\n    def to_internal_value(self, data):\n        if isinstance(data, bool) or not isinstance(data, (str, int, float,)):\n            self.fail(\"invalid\")\n        value = str(data)\n        return value.strip() if self.trim_whitespace else value\n\n    def to_representation(self, value):\n        return str(value)",
      "lineHeight": 1.2
    },
    {
      "id": "LzNBpl5MO30VZD0mMopxq",
      "type": "rectangle",
      "x": 1472.6972541809082,
      "y": -424.02277183532715,
      "width": 710.6061172485352,
      "height": 345.4545307159424,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1764153551,
      "version": 72,
      "versionNonce": 610407233,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679973265557,
      "link": null,
      "locked": false
    },
    {
      "id": "L5BSrPPI0WoUT2JECY4zE",
      "type": "rectangle",
      "x": 1484.0608940124512,
      "y": -65.68947982788086,
      "width": 747.7272033691406,
      "height": 437.1211624145508,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1491893583,
      "version": 76,
      "versionNonce": 1247652481,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679973270215,
      "link": null,
      "locked": false
    },
    {
      "id": "VvWPDXjhwiPfRNx4OoFyT",
      "type": "text",
      "x": 1750.9926567077637,
      "y": -102.73488235473633,
      "width": 128,
      "height": 19.2,
      "angle": 0,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 90176143,
      "version": 92,
      "versionNonce": 2077075489,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1679973289313,
      "link": null,
      "locked": false,
      "text": "序列化后得到的值",
      "fontSize": 16,
      "fontFamily": 3,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "序列化后得到的值",
      "lineHeight": 1.2
    },
    {
      "type": "text",
      "version": 142,
      "versionNonce": 948419745,
      "isDeleted": false,
      "id": "JeR4U8_Ij3C0Jq7lOzNkd",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1738.2807273864746,
      "y": 350.051439666748,
      "strokeColor": "#862e9c",
      "backgroundColor": "transparent",
      "width": 128,
      "height": 19.2,
      "seed": 761823375,
      "groupIds": [],
      "roundness": null,
      "boundElements": null,
      "updated": 1679973293285,
      "link": null,
      "locked": false,
      "fontSize": 16,
      "fontFamily": 3,
      "text": "序列化后得到的值",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "序列化后得到的值",
      "lineHeight": 1.2
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}